---
const {
  ImageUrls,
  Urls,
  Interval,
  WidthTailwindClass,
  Identifier,
  BackgroundTailwindClasses,
} = Astro.props;
import { Image } from "astro:assets";
---

<div class:list={["bg-background flex shrink-0 px-2", WidthTailwindClass]}>
  <div
    class="card bg-dark-gray-700 after:bg-primary relative flex w-full shrink-0 flex-col items-center justify-center gap-4 text-white before:absolute before:right-0 before:bottom-0 before:z-2 before:h-[2px] before:w-full before:bg-gray-600 before:transition-[width] before:duration-300 before:ease-in-out before:content-[''] after:absolute after:bottom-0 after:left-0 after:z-2 after:h-[2px] after:w-0 after:transition-[width] after:delay-125 after:duration-300 after:ease-[cubic-bezier(0.55,0.085,0.68,0.53)] after:content-[''] hover:cursor-pointer hover:before:w-0 hover:after:w-full"
  >
    <div
      data-interval={Interval}
      class:list={[
        "hidescrollbar flex w-full snap-x snap-mandatory flex-row overflow-auto scroll-smooth",
        Identifier,
      ]}
    >
      {
        ImageUrls.map((url: string, index: number) => {
          return (
            <a href={Urls[index]} class="flex min-w-full snap-start">
              <Image
                src={url}
                inferSize
                alt="Portrait"
                class:list={[
                  "mx-18 aspect-square w-full object-contain",
                  BackgroundTailwindClasses && BackgroundTailwindClasses[index],
                ]}
              />
            </a>
          );
        })
      }
    </div>
  </div>
</div>
<script define:vars={{ Identifier }}>
  let test = document.querySelector("." + Identifier);

  (function () {
    let interval = test.getAttribute("data-interval");

    setInterval(function () {
      if (test) {
        let max_scroll = test.scrollWidth - test.clientWidth;
        let current_scroll = test.scrollLeft;
        if (test.scrollLeft + test.clientWidth * 0.51 > max_scroll) {
          test.scrollLeft = 0;
        } else test.scrollLeft = current_scroll + test.clientWidth * 0.51;
      }
    }, +interval);
  })();
</script>
