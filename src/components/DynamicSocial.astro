---
import { setMaxIdleHTTPParsers } from "http";
import Frontpageheader from "./Frontpageheader.astro";
import Gallery from "./Gallery.astro";
import Socialcard from "./Socialcard.astro";

import { IG_ACCESS_TOKEN, getSecret } from "astro:env/server";
import SmallSponsors from "./SmallSponsors.astro";

const KEY = getSecret("IG_ACCESS_TOKEN");
const response1 = await fetch(
  "https://graph.instagram.com/v22.0/17841429201354204/media?access_token=" +
    KEY,
);
const res = await response1.json();
---

{
  res.data.map(async (item: any, index: number) => {
    const mediaArray: any[] = [];
    const response2 = await fetch(
      "https://graph.instagram.com/v22.0/" +
        item.id +
        "?fields=caption,comments_count,id,like_count,media_url,permalink,thumbnail_url,timestamp,username,media_type,media_product_type,children{media_url}&access_token=" +
        KEY,
    );
    if (response2.ok) {
      const {
        media_url,
        timestamp,
        caption,
        permalink,
        media_type,
        media_product_type,
        children,
      } = await response2.json();
      if (index == 4) {
        return (
          <>
            <SmallSponsors />
            <Socialcard
              ImageUrl={media_url}
              Caption={caption}
              Permalink={permalink}
              Timestamp={timestamp}
              Type={media_type}
              ProductType={media_product_type}
              Children={children}
            />
          </>
        );
      } else
        return (
          <Socialcard
            ImageUrl={media_url}
            Caption={caption}
            Permalink={permalink}
            Timestamp={timestamp}
            Type={media_type}
            ProductType={media_product_type}
            Children={children}
          />
        );
    } else return;
  })
}
